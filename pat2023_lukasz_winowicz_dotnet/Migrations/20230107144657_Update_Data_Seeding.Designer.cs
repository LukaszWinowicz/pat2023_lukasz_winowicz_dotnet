// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pat2023_lukasz_winowicz_dotnet.Entities.Database;

#nullable disable

namespace pat2023lukaszwinowiczdotnet.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230107144657_Update_Data_Seeding")]
    partial class UpdateDataSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("pat2023_lukasz_winowicz_dotnet.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1949, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Haruki",
                            Gender = false,
                            LastName = "Murakami"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1892, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "J.R.R.",
                            Gender = false,
                            LastName = "Tolkien"
                        });
                });

            modelBuilder.Entity("pat2023_lukasz_winowicz_dotnet.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<DateTime>("PublicationDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(2,1)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "In 1Q84 ...",
                            ISBN = "XXX123",
                            PublicationDate = new DateTime(1988, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 8.2m,
                            Title = "1Q84 Tom 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "In 1Q84 ...",
                            ISBN = "XXX124",
                            PublicationDate = new DateTime(1989, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 7.5m,
                            Title = "1Q84 Tom 2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Bilbo was...",
                            ISBN = "XXX125",
                            PublicationDate = new DateTime(1925, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 9.5m,
                            Title = "Hobbit"
                        });
                });

            modelBuilder.Entity("pat2023_lukasz_winowicz_dotnet.Entities.BookAuthor", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("BookAuthors");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 1
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 2
                        });
                });

            modelBuilder.Entity("pat2023_lukasz_winowicz_dotnet.Entities.BookAuthor", b =>
                {
                    b.HasOne("pat2023_lukasz_winowicz_dotnet.Entities.Author", "Author")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pat2023_lukasz_winowicz_dotnet.Entities.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("pat2023_lukasz_winowicz_dotnet.Entities.Author", b =>
                {
                    b.Navigation("BookAuthors");
                });

            modelBuilder.Entity("pat2023_lukasz_winowicz_dotnet.Entities.Book", b =>
                {
                    b.Navigation("BookAuthors");
                });
#pragma warning restore 612, 618
        }
    }
}
